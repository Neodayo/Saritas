# Generated by Django 4.2.20 on 2025-05-06 00:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('staff', 'Staff'), ('customer', 'Customer')], default='customer', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=255, unique=True)),
                ('location', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='customers/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='saritasapp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizedWardrobePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customization_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('staff_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('venue', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ExternalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('provider_name', models.CharField(max_length=255)),
                ('provider_phone', models.CharField(max_length=20)),
                ('provider_email', models.EmailField(max_length=254)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('available', models.BooleanField(default=True)),
                ('rental_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reservation_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('deposit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='inventory/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='saritasapp.branch')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='saritasapp.category')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saritasapp.color')),
            ],
            options={
                'verbose_name_plural': 'Inventory',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventorySize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='saritasapp.inventory')),
            ],
            options={
                'verbose_name': 'Inventory Size',
                'verbose_name_plural': 'Inventory Sizes',
                'ordering': ['size__name'],
            },
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('bridal_gown', 'Bridal Gown'), ('groom_tuxedo', "Groom's Tuxedo"), ('maid_of_honor', 'Maid of Honor'), ('bestman', 'Bestman'), ('bridesmaid', 'Bridesmaid'), ('groomsmen', 'Groomsmen'), ('flowergirl', 'Flowergirl'), ('bearer', 'Bearer'), ('mother_gown', "Mother's Gown"), ('father_attire', "Father's Suit"), ('other', 'Other')], max_length=50, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PackageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saritasapp.externalservice')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='saritasapp.eventpackage')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_number', models.CharField(max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('down_payment', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('shoulder', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('bust', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('front', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('waist', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('hips', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('arm_length', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('bust_depth', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('bust_distance', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('lower_circumference', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('crotch', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('payment_time', models.DateTimeField(blank=True, null=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('pickup_date', models.DateField(blank=True, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('Credit Card', 'Credit Card'), ('Bank Transfer', 'Bank Transfer')], max_length=50)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', 'Double Extra Large'), ('XXXL', 'Triple Extra Large'), ('PS', 'Plus Size'), ('KS', 'Kid Size'), ('OS', 'One Size')], max_length=10, unique=True)),
                ('description', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WardrobePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('tier', models.CharField(blank=True, choices=[('A', 'Package A'), ('B', 'Package B'), ('C', 'Package C')], help_text='Predefined package tier (A, B, C)', max_length=10, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('deposit_price', models.DecimalField(decimal_places=2, default=10000.0, help_text='Refundable deposit amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('fixed', 'Fixed Composition'), ('customizable', 'Customizable'), ('archived', 'Archived')], default='fixed', help_text='Fixed packages cannot be modified by customers', max_length=15)),
                ('min_rental_days', models.PositiveIntegerField(default=1, help_text='Minimum rental period for this package')),
                ('includes_accessories', models.BooleanField(default=False, help_text='Does this package include free accessories?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Wardrobe Packages',
                'ordering': ['tier', 'base_price'],
            },
        ),
        migrations.CreateModel(
            name='WardrobePackageRental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('returned', 'Returned'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pickup_date', models.DateField(blank=True, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('actual_return_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saritasapp.customer')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saritasapp.wardrobepackage')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_rentals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wardrobe Package Rental',
                'verbose_name_plural': 'Wardrobe Package Rentals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WardrobePackageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('is_required', models.BooleanField(default=True, help_text='Whether this item is mandatory for the package')),
                ('label', models.CharField(blank=True, help_text="Display label (e.g., 'Barong/Vest')", max_length=255)),
                ('replacement_allowed', models.BooleanField(default=True, help_text='Can this item be replaced in customizations?')),
                ('inventory_item', models.ForeignKey(limit_choices_to={'available': True}, on_delete=django.db.models.deletion.CASCADE, to='saritasapp.inventory')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_items', to='saritasapp.wardrobepackage')),
            ],
            options={
                'ordering': ['package', '-is_required'],
                'unique_together': {('package', 'inventory_item')},
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_custom', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saritasapp.branch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SelectedPackageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected', models.BooleanField(default=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saritasapp.packageitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_items', to='saritasapp.customerorder')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_date', models.DateTimeField(auto_now_add=True)),
                ('pickup_deadline', models.DateTimeField()),
                ('pickup_time', models.DateTimeField(blank=True, null=True)),
                ('reservation_fee', models.DecimalField(decimal_places=2, default=500.0, help_text='Minimum ₱500 reservation fee', max_digits=8, validators=[django.core.validators.MinValueValidator(500.0)])),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('paid', 'Paid - Awaiting Pickup'), ('fulfilled', 'Fulfilled (Converted to Rental)'), ('expired', 'Expired (No Show)'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='saritasapp.customer')),
                ('inventory_size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reservations', to='saritasapp.inventorysize')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_reservations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['reservation_date'],
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rental_start', models.DateField(default=django.utils.timezone.now)),
                ('rental_end', models.DateField()),
                ('deposit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rented', 'Rented'), ('Returned', 'Returned'), ('Overdue', 'Overdue'), ('Cancelled', 'Cancelled'), ('Rejected', 'Rejected')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('returned_date', models.DateField(blank=True, null=True)),
                ('penalty_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('return_condition', models.CharField(blank=True, choices=[('excellent', 'Excellent - No issues'), ('good', 'Good - Minor wear'), ('fair', 'Fair - Needs cleaning/repair'), ('poor', 'Poor - Significant damage')], max_length=10, null=True)),
                ('return_notes', models.TextField(blank=True, null=True)),
                ('damage_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='saritasapp.customer')),
                ('inventory_size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rentals', to='saritasapp.inventorysize')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_returns', to=settings.AUTH_USER_MODEL)),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_rentals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rental',
                'verbose_name_plural': 'Rentals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PackageRentalItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('rental_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('returned', models.BooleanField(default=False)),
                ('returned_date', models.DateField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, choices=[('excellent', 'Excellent - No visible wear'), ('good', 'Good - Minor wear'), ('fair', 'Fair - Some wear but functional'), ('poor', 'Poor - Significant wear/damage'), ('damaged', 'Damaged - Needs repair')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_rentals', to='saritasapp.inventory')),
                ('package_rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rented_items', to='saritasapp.wardrobepackagerental')),
            ],
            options={
                'verbose_name': 'Rented Package Item',
                'verbose_name_plural': 'Rented Package Items',
            },
        ),
        migrations.AddField(
            model_name='packageitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saritasapp.service'),
        ),
        migrations.CreateModel(
            name='PackageCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('add', 'Add Item'), ('remove', 'Remove Item'), ('replace', 'Replace Item'), ('quantity', 'Adjust Quantity')], max_length=10)),
                ('new_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('customized_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modifications', to='saritasapp.customizedwardrobepackage')),
                ('inventory_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saritasapp.inventory')),
                ('original_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saritasapp.wardrobepackageitem')),
            ],
            options={
                'verbose_name': 'Package Customization',
                'verbose_name_plural': 'Package Customizations',
            },
        ),
        migrations.CreateModel(
            name='OrderWardrobePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('rental_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposit_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('customized_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saritasapp.customizedwardrobepackage')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wardrobe_packages', to='saritasapp.customerorder')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saritasapp.wardrobepackage')),
            ],
            options={
                'verbose_name': 'Ordered Wardrobe Package',
                'verbose_name_plural': 'Ordered Wardrobe Packages',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('rental_approved', 'Rental Approved'), ('rental_rejected', 'Rental Rejected'), ('rental_completed', 'Rental Completed'), ('reservation_approved', 'Reservation Approved'), ('reservation_rejected', 'Reservation Rejected'), ('reservation_completed', 'Reservation Completed'), ('payment_required', 'Payment Required'), ('payment_received', 'Payment Received'), ('rental_reminder', 'Rental Reminder'), ('return_reminder', 'Return Reminder'), ('system_alert', 'System Alert')], max_length=30)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rental', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saritasapp.rental')),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saritasapp.reservation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='inventorysize',
            name='size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saritasapp.size'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='item_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saritasapp.itemtype'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saritasapp.material'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='style',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saritasapp.style'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='tags',
            field=models.ManyToManyField(blank=True, to='saritasapp.tag'),
        ),
        migrations.CreateModel(
            name='FittingAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='scheduled', max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitting_appointments', to='saritasapp.branch')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitting_appointments', to='saritasapp.customer')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitting_appointments', to='saritasapp.inventory')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_fittings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customizedwardrobepackage',
            name='base_package',
            field=models.ForeignKey(limit_choices_to={'status__in': ['fixed', 'customizable']}, on_delete=django.db.models.deletion.CASCADE, to='saritasapp.wardrobepackage'),
        ),
        migrations.AddField(
            model_name='customizedwardrobepackage',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_packages', to='saritasapp.customer'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='saritasapp.eventpackage'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='wardrobe_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='saritasapp.wardrobepackage'),
        ),
        migrations.AddField(
            model_name='user',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='saritasapp.branch'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['status', 'pickup_deadline'], name='saritasapp__status_782e1e_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['inventory_size', 'status'], name='saritasapp__invento_8a07af_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['status'], name='saritasapp__status_60560d_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['rental_start', 'rental_end'], name='saritasapp__rental__8cd9c7_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['returned_date'], name='saritasapp__returne_32ccb9_idx'),
        ),
        migrations.AddIndex(
            model_name='rental',
            index=models.Index(fields=['return_condition'], name='saritasapp__return__0fff58_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='packagerentalitem',
            unique_together={('package_rental', 'inventory_item')},
        ),
        migrations.AlterUniqueTogether(
            name='inventorysize',
            unique_together={('inventory', 'size')},
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['name'], name='saritasapp__name_d06756_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['category'], name='saritasapp__categor_ebdc56_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['available'], name='saritasapp__availab_4a0505_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['item_type'], name='saritasapp__item_ty_199fde_idx'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['branch'], name='saritasapp__branch__72ff6d_idx'),
        ),
    ]
